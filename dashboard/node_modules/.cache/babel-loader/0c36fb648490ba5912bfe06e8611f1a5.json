{"ast":null,"code":"var _jsxFileName = \"/Users/x/btb/dronecomm/dashboard/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport openSocket from 'socket.io-client';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.rxDronesData = dronesData => {\n      this.setState({\n        dronesData: dronesData\n      });\n    };\n\n    this.state = {\n      dronesData: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = openSocket('http://localhost:5000');\n    const that = this;\n    socket.on('connect', function () {\n      socket.on('dronesdata', that.rxDronesData);\n      socket.emit('subscribe', 1000);\n    });\n  }\n\n  render() {\n    const columns = [{\n      Header: 'droneID',\n      accessor: 'droneID'\n    }, {\n      Header: 'latitude [deg]',\n      accessor: 'latitude'\n    }, {\n      Header: 'longitude [deg]',\n      accessor: 'longitude'\n    }, {\n      Header: 'velocity [km/h]',\n      accessor: 'velocity'\n    }, {\n      Header: 'inactive',\n      accessor: 'inactive'\n    }];\n    return React.createElement(ReactTable, {\n      data: this.state.dronesData,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/x/btb/dronecomm/dashboard/src/App.js"],"names":["React","openSocket","ReactTable","App","Component","constructor","rxDronesData","dronesData","setState","state","componentDidMount","socket","that","on","emit","render","columns","Header","accessor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,YAhBc,GAgBEC,UAAD,IAAgB;AAC7B,WAAKC,QAAL,CAAc;AACZD,QAAAA,UAAU,EAAEA;AADA,OAAd;AAGD,KApBa;;AAEZ,SAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAGV,UAAU,CAAC,uBAAD,CAAzB;AACA,UAAMW,IAAI,GAAG,IAAb;AACAD,IAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,YAAY;AAC/BF,MAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAwBD,IAAI,CAACN,YAA7B;AACAK,MAAAA,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyB,IAAzB;AACD,KAHD;AAID;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,MAAM,EAAE,SADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADc,EAKd;AACED,MAAAA,MAAM,EAAE,gBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALc,EASd;AACED,MAAAA,MAAM,EAAE,iBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATc,EAad;AACED,MAAAA,MAAM,EAAE,iBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAbc,EAiBd;AACED,MAAAA,MAAM,EAAE,UADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAjBc,CAAhB;AAuBA,WACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWF,UAA7B;AAAyC,MAAA,OAAO,EAAES,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAlD+B;;AAqDlC,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport openSocket from 'socket.io-client';\n\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dronesData: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = openSocket('http://localhost:5000');\n    const that = this;\n    socket.on('connect', function () {\n      socket.on('dronesdata', that.rxDronesData);\n      socket.emit('subscribe', 1000);\n    });\n  }\n\n  rxDronesData = (dronesData) => {\n    this.setState({\n      dronesData: dronesData\n    });\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'droneID',\n        accessor: 'droneID',\n      },\n      {\n        Header: 'latitude [deg]',\n        accessor: 'latitude',\n      },\n      {\n        Header: 'longitude [deg]',\n        accessor: 'longitude'\n      },\n      {\n        Header: 'velocity [km/h]',\n        accessor: 'velocity'\n      },\n      {\n        Header: 'inactive',\n        accessor: 'inactive'\n      }\n    ];\n\n    return (\n      <ReactTable data={this.state.dronesData} columns={columns} />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}